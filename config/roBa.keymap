#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        zenkaku_hankaku {
            bindings = <&to_layer_0 LANGUAGE_5>;
            key-positions = <11 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 2 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        go_home: go_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&go_home>, <&macro_tap>, <&kp LEFT_WIN &kp D>;

            label = "GO_HOME";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO2";
            bindings = <&kp NUMBER_2>, <&kp DQT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO6";
            bindings = <&kp NUMBER_6>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO7";
            bindings = <&kp N7>, <&kp SQT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO8";
            bindings = <&kp N8>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO9";
            bindings = <&kp N9>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO0";
            bindings = <&kp N0>, <&mo 2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo_colon: mo_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_COLON";
            bindings = <&kp SINGLE_QUOTE>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R         &kp T                                &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F         &kp G  &none          &kp DEL        &kp H        &kp J  &kp K      &kp L    &mo_colon
&kp Z  &kp X  &kp C  &kp V         &kp B  &sl 1          &sl 3          &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&none  &none  &none  &kp LEFT_WIN  &sl 4  &kp LSHFT      &kp BACKSPACE  &lt 2 ENTER                             &kp SEMICOLON
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        NUMBER {
            bindings = <
&kp NUMBER_1                &mo2             &kp NUMBER_3     &kp NUMBER_4     &kp N5                                                     &mo6              &mo7               &mo8            &mo9             &mo0
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &mo2             &kp KP_NUMBER_3  &kp PERIOD    &mo 0                        &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &kp LSHFT                    &kp LSHFT       &trans                                                                &kp PIPE
            >;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE    &kp F2  &kp F5        &kp COLON          &kp MINUS                                 &kp F6        &kp F7        &kp F8          &kp F9        &kp F10
&kp NUMBER_1  &mo2    &kp NUMBER_3  &none              &kp UNDER      &none          &kp PG_UP   &kp PG_DN     &msc SCRL_UP  &msc SCRL_DOWN  &kp HOME      &kp END
&kp NUMBER_4  &kp N5  &mo6          &kp DOUBLE_QUOTES  &kp SLASH      &none          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4
&mo7          &mo8    &mo9          &mo0               &kp BACKSPACE  &kp ENTER      &trans      &trans                                                    &kp LEFT_SHIFT
            >;
        };

        MACRO {
            bindings = <
&kp ASTERISK           &kp ASTRK         &kp STAR         &kp LEFT_PARENTHESIS  &kp LPAR                                  &kp GREATER_THAN  &kp GT            &kp QUESTION   &kp SLASH          &kp FSLH
&kp RIGHT_PARENTHESIS  &kp RPAR          &kp SPACE        &kp MINUS             &kp UNDERSCORE  &kp UNDER      &kp GRAVE  &kp TILDE         &kp COMMA         &kp LESS_THAN  &kp LT             &kp PERIOD
&kp EQUAL              &kp LEFT_BRACKET  &kp LBKT         &kp LEFT_BRACE        &kp LBRC        &kp UNDER      &kp SEMI   &kp COLON         &kp SINGLE_QUOTE  &kp APOS       &kp DOUBLE_QUOTES  &kp DQT
&kp RIGHT_BRACKET      &kp RBKT          &kp RIGHT_BRACE  &kp RBRC              &kp BACKSLASH   &kp BSLH       &kp PIPE   &kp SEMICOLON                                                         &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };
    };
};
