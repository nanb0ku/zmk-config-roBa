// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        zenkaku_hankaku {
            bindings = <&to_layer_0 GRAVE>;
            key-positions = <11 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 2 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        go_home: go_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&go_home>, <&macro_tap>, <&kp LEFT_WIN &kp D>;

            label = "GO_HOME";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO2";
            bindings = <&kp NUMBER_2>, <&kp JP_DQUOTE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO6";
            bindings = <&kp NUMBER_6>, <&kp JP_AMPERSAND >;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO7";
            bindings = <&kp N7>, <&kp JP_QUOTE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO8";
            bindings = <&kp N8>, <&kp JP_LPAREN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO9";
            bindings = <&kp N9>, <&kp JP_RPAREN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            label = "MO0";
            bindings = <&kp N0>, <&mo 2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo_colon: mo_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_COLON";
            bindings = <&kp JP_COLON>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R         &kp T                                &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F         &kp G  &none          &kp DEL        &kp H      &kp J  &kp K      &kp L    &mo_colon
&kp Z  &kp X  &kp C  &kp V         &kp B  &none          &sl 1          &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&none  &none  &none  &kp LEFT_WIN  &none  &kp LSHFT      &kp BACKSPACE  &kp ENTER                             &to 2
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Control {
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)                                               &mo6              &mo7               &mo8            &mo9             &mo0
&kp LC(A)  &kp LC(S)  &none      &kp LC(F)  &none      &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp PERCENT
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &mo 0                        &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans     &trans     &trans     &trans     &none      &kp LSHFT                    &kp LSHFT       &trans                                                                &kp PIPE
            >;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE    &kp F2  &kp F5        &kp JP_PLUS      &kp MINUS                                   &kp F6          &kp F7        &kp F8          &kp F9        &kp F10
&kp NUMBER_1  &mo2    &kp NUMBER_3  &none            &kp JP_EQUAL  &none          &kp PG_UP      &kp PG_DN       &msc SCRL_UP  &msc SCRL_DOWN  &kp HOME      &kp END
&kp NUMBER_4  &kp N5  &mo6          &kp JP_ASTERISK  &kp SLASH     &none          &bt BT_CLR     &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4
&mo7          &mo8    &mo9          &mo0             &none         &kp ENTER      &kp BACKSPACE  &kp LEFT_SHIFT                                              &to 0
            >;
        };

        BRANK {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &msc SCRL_UP    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3        &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &msc SCRL_DOWN  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                      &trans
            >;
        };
    };
};
